plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: "config.gradle"
apply from: "dependencies.gradle"

def secretKeyPropertiesFile = file("secretkey.properties")
def secretKeyProperties = new Properties()
if (secretKeyPropertiesFile.exists()) {
    secretKeyProperties.load(new FileInputStream(secretKeyPropertiesFile))
}

android {
    compileSdk configs.compileSdk

    defaultConfig {
        applicationId configs.applicationId
        minSdk configs.minSdk
        targetSdk configs.targetSdk
        versionCode configs.versionCode
        versionName configs.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('keystore/release.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            manifestPlaceholders = [enableCrashReporting: "false"]
            buildConfigField "String", "BASE_APP_URL", DEV_BASE_APP_URL
        }
        staging {
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            manifestPlaceholders = [enableCrashReporting: "true"]
            buildConfigField "String", "BASE_APP_URL", STAGE_BASE_APP_URL
        }
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [enableCrashReporting: "true"]
            buildConfigField "String", "BASE_APP_URL", PROD_BASE_APP_URL
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = outputFileName.replace("app", "ConversionRates-v" + defaultConfig.versionName)
        }
    }
}

dependencies {

    // Kotlin
    implementation kotlinXCoroutine

    // AndroidX
    implementation androidXDependencies.activityKTX
    implementation androidXDependencies.annotation
    implementation androidXDependencies.appCompat
    implementation androidXDependencies.constraintLayout
    implementation androidXDependencies.coreKTX
    implementation androidXDependencies.lifecycleExtension
    implementation androidXDependencies.lifecycleLiveDataKTX
    implementation androidXDependencies.lifecycleRuntimeKTX
    implementation androidXDependencies.lifecycleViewModelKTX
    implementation androidXDependencies.recyclerView
    implementation androidXDependencies.roomKTX
    implementation androidXDependencies.roomRuntime
    implementation androidXDependencies.roomRxJava2
    implementation androidXDependencies.sqlite
    kapt androidXDependencies.roomCompiler

    // Google
    implementation googleDependencies.material

    // Retrofit
    implementation retrofitDependencies.adapterRxJava2
    implementation retrofitDependencies.retrofit
    implementation retrofitDependencies.converterGson
    implementation retrofitDependencies.converterMoshi

    // OkHttp
    implementation okHttpLoggingInterceptorDependency

    // OkHttp Profiler
    implementation okHttpProfilerDependency

    // Moshi
    implementation moshiDependencies.moshiKotlin
    kapt moshiDependencies.moshiKotlinCodeGen

    // Scalar
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.36'
    kapt 'com.google.dagger:hilt-android-compiler:2.36'

    // Timber
    implementation timberDependency

    // Glide
    implementation glideDependencies.glide
    kapt glideDependencies.glideCompiler

    // Firebase
    implementation platform(firebaseDependencies.bom)
    implementation firebaseDependencies.analyticsKTX
    implementation firebaseDependencies.crashlyticsKTX
    implementation firebaseDependencies.config

    // Unit Test
    testImplementation jUnitDependency
    androidTestImplementation androidXTestDependencies.espresso
}

kapt {
    correctErrorTypes true
}